server:
  port: 8081

spring:
  config:
    import: configserver:http://localhost:8085
  application:
    name: USER-SERVICE
  datasource:
    url: jdbc:mysql://localhost:3306/microservices
    username: root
    password: root@123


  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-49167573.okta.com/oauth2/default
      client:
        registration:
          my-internal-client:
            provider: okta
            authorizationGrantType: client_credentials
            scope: internal
            client-id: 0oae4p96as0kgkhc65d7
            client-secret: Sw6kWTWhFVPQ23OgatrkKBXqkaYjO9HP9CdUeQA7v9U-r2neuZu_8Bldsj6UMgXe

        provider:
          okta:
            issuerUri: https://dev-49167573.okta.com/oauth2/default






management:
  health:
    circuitbreakers:
      enabled: true

  endpoints:
      web:
        exposure:
          include: health
  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED

  retry:
    instances:
      ratingHotelService:
        maxAttempts: 3
        waitDuration: 5s

  ratelimiter:
    instances:
      userRateLimiter:
        limitRefreshPeriod: 4s
        limitForPeriod: 2
        timeoutDuration: 0s

# Okta configuration for User service
okta:
  oauth2:
    issuer: https://dev-49167573.okta.com/oauth2/default
    audience: api://default